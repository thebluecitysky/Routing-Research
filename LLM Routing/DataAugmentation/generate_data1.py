import pandas as pd
import random

from parser_tree import generate_variant_query
from run_llama8b import llama_generate
from run_deepseek32b import deepseek_generate


# 读取原始数据集
train_data = pd.read_csv("DeepRouter/data/train data/preference data/train.csv")

instruct_prompt = """
You are tasked with evaluating the quality of responses generated by two models—a smaller model and a larger model—for a given question \( q \). 
The smaller model's response is \( \text{response\_a} \), and the larger model's response is \( \text{response\_b} \). 
Based on the quality of the responses, assign a score between 1 and 5, where:
- **1-3**: The response quality is not good enough, and the question is better suited for the smaller (weaker) model.
- **4-5**: The response quality is good, and the question is better suited for the larger (stronger) model.

Your task is to determine whether the question \( q \) is better suited for the smaller model or the larger model based on the response quality. Only generate a single numerical score between 1 and 5. Do not provide any additional explanation or context.

**Output Format:**  
A single integer between 1 and 5.  

**Example:**  
If the response quality is good and the question is better suited for the larger model, output:  
`5`  

If the response quality is not good enough and the question is better suited for the smaller model, output:  
`2`  

**Your Output:**  
`[Your score here]`
"""

# 遍历每一行数据
expanded_data = []
for index, row in train_data.iterrows():
    q = row["prompt"]
    # 生成变异查询 q'
    q_prime = generate_variant_query(q)
    # 使用小模型生成回答 a'
    small_llm_a = llama_generate(q_prime)
    large_llm_a = deepseek_generate(q_prime)
    
    score = deepseek_generate(
        instruct_prompt.replace('{response\_a}', small_llm_a).replace('{response\_b}', large_llm_a).replace('\( q \)', q_prime)
        )
    if int(score) > 3:
        winner = 'a'
    elif int(score) == 3:
        winner == "tie"
    else:
        winner = 'b'
    # 构造新数据行
    new_row = {
        "id": len(expanded_data) + 1,  # 生成唯一 ID
        "model_a": 'llama3-8b',
        "model_b": "deepseek-32b",
        "prompt": q_prime,
        "response_a": small_llm_a,
        "response_b": large_llm_a,
        "winner_model_a": 1 if winner == "a" else 0,
        "winner_model_b": 1 if winner == "b" else 0,
        "winner_tie": 1 if winner == "tie" else 0,
        "score": int(score)
    }
    
    # 添加到扩充数据集中
    expanded_data.append(new_row)

# 将扩充数据保存到新的 CSV 文件
expanded_df = pd.DataFrame(expanded_data)
expanded_df.to_csv("expanded_train.csv", index=False)